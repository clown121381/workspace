<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao.NoteBookDao">
	<select id="findUser" parameterType="string" resultType="com.spring.bean.Admin">
		select userid,username,userpass from admin where username=#{username}
	</select>

	<select id="findAllMess" resultType="com.spring.bean.Message">
		select mid,author,title,content,email,to_char(add_date,'YYYY-MM-DD') add_date from message order by add_date desc 
	</select>
	
	<insert id="addMessage" parameterType="com.spring.bean.Message">
		insert into message(mid,author,title,content,email,add_date) values(mess_seq.nextval,#{author},#{title},#{content},#{email},to_date(#{add_date},'YYYY-MM-DD'))
	</insert>
	
	<select id="findMess" parameterType="int" resultType="com.spring.bean.Message">
		select mid,author,title,content,email,to_char(add_date,'YYYY-MM-DD') add_date from message where mid=#{mid}
	</select>
	
	<update id="updateMess" parameterType="com.spring.bean.Message">
		update message set author=#{author},title=#{title},content=#{content},email=#{email} where mid=#{mid}
	</update>
	
	<delete id="deleteMess" parameterType="int">
		delete from message where mid=#{mid}
	</delete>
	
	<select id="findMessByMore" resultType="com.spring.bean.Message">
		select mid,author,title,content,email,to_char(add_date,'YYYY-MM-DD') add_date from message
		<where>
			<if test="author != null">
				author like '%${author}%'
			</if>
			
			<if test="email != null">
				and email like '%${email}%'
			</if>
			
			<if test="content != null">
				and content like '%${content}%'
			</if>
		</where>
		
	</select>
</mapper>